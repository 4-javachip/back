name: Deploy Backend with Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/starbucks-backend:latest .

    - name: Push Docker image to Docker Hub (public repo)
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/starbucks-backend:latest

    - name: Setup SSH to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy on EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
        cd ~/starbucks-app/back
        echo "[CONFIG] writing application.yml..."
        mkdir -p src/main/resources
        echo "$BACK_APPLICATION_YML" > src/main/resources/application.yml
        echo "[DOCKER] pulling latest image and restarting..."
        docker pull ${{ secrets.DOCKER_USERNAME }}/starbucks-backend:latest
        docker compose up -d
        docker image prune --filter "dangling=true" -f
        EOF

    - name: Get Short Commit Message
      id: commit_msg
      run: echo "SHORT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_ENV

    - name: Discord Notify
      if: always()
      run: |
        STATUS="${{ job.status }}"
        if [ "$STATUS" = "success" ]; then
          COLOR=3066993
          ICON="‚úÖ"
          TITLE="Backend Deploy ÏÑ±Í≥µ"
        else
          COLOR=15158332
          ICON="‚ùå"
          TITLE="Backend Deploy Ïã§Ìå®"
        fi

        curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
        -H "Content-Type: application/json" \
        -d @- <<EOF
        {
          "embeds": [
            {
              "title": "$ICON $TITLE",
              "color": $COLOR,
              "fields": [
                {
                  "name": "üî® Commit",
                  "value": "${SHORT_MSG}"
                },
                {
                  "name": "üë§ By",
                  "value": "${{ github.actor }}"
                },
                {
                  "name": "üìÖ When",
                  "value": "${{ github.event.head_commit.timestamp }}"
                }
              ]
            }
          ]
        }
        EOF
