name: Deploy Backend

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test --stacktrace

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "BACK_APPLICATION_YML='${{ secrets.BACK_APPLICATION_YML }}' bash ~/starbucks-app/deploy/deploy-back.sh"

    - name: Get Short Commit Message
      id: commit_msg
      run: echo "SHORT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_ENV

    - name: Discord Notify
      if: always()
      run: |
        STATUS="${{ job.status }}"
        if [ "$STATUS" = "success" ]; then
          COLOR=3066993   # green
          ICON="‚úÖ"
          TITLE="Backend Deploy ÏÑ±Í≥µ"
        else
          COLOR=15158332  # red
          ICON="‚ùå"
          TITLE="Backend Deploy Ïã§Ìå®"
        fi
    
        curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
        -H "Content-Type: application/json" \
        -d @- <<EOF
        {
        "embeds": [
        {
          "title": "$ICON $TITLE",
          "color": $COLOR,
          "fields": [
            {
              "name": "üî® Commit",
              "value": "${SHORT_MSG}}"
            },
            {
              "name": "üë§ By",
              "value": "${{ github.actor }}"
            },
            {
              "name": "üìÖ When",
              "value": "${{ github.event.head_commit.timestamp }}"
            }
          ]
        }
        ]
        }
        EOF
